{"title":"Hello Blog","markdown":{"yaml":{"title":"Hello Blog","author":"Phil Chodrow","date":"2023-01-10","image":"image.jpg","description":"An example blog post illustrating the key techniques you'll need to demonstrate your learning in CSCI 0451.","format":"html"},"headingText":"Frontmatter","containsRefs":false,"markdown":"\n\nThis is an example of the blog posts that you'll submit as your primary form of learning demonstration in CSCI 0451. I created this post by modifying the file `posts/example-blog-post/index.ipynb` in VSCode. You can also use JupyterLab for this editing if you prefer. Finally, it is possible to write blog posts without using notebooks by writing `.qmd` files, as illustrated [here](https://quarto.org/docs/get-started/hello/vscode.html). \n\n\nYour notebook needs to contain some metadata: things like the title, author, date, etc. You specify this in a `raw` cell at the very beginning of the notebook. In this notebook, the contents of this cell is: \n\n```\n---\ntitle: Hello Blog\nauthor: Phil Chodrow\ndate: '2023-01-10'\nimage: \"image.jpg\"\ndescription: \"An example blog post illustrating the key techniques you'll need to demonstrate your learning in CSCI 0451.\"\nformat: html\n---\n```\n\nFrontmatter can be fiddly (it's sensitive to spaces, for example), and so the best approach is usually to copy and paste it from previous blog posts, modifying it as appropriate. \n\n\n# Running Python Code\n\nTo run Python code, place your code in a Python code block inside your notebook. You can run the code block inside VSCode (or JupyterLab) using the keyboard shortcut `ctrl + Enter`. You'll see the result of your computation below the code, including the value of the most recent statement. \n\nWe'll have lots of opportunities to make data visualizations in this course. These also display inside the notebook, and get converted into your blog post: \n\nAnother thing we'll often do is implement an algorithm in a source file (i.e. a `.py` file) and then *use* it in a notebook. To do this, just place the `.py` file in the same directory as the notebook. For example, the file `source.py` in the same directory contains a custom function (which prints a message). I can use like this: \n\n# Markdown\n\nYou can use Markdown syntax to write text in Markdown cells. Markdown allows you to create simple text formatting like bullets, italics, and section headers. The Quarto [description of markdown basics](https://quarto.org/docs/authoring/markdown-basics.html) has everything you need to get started. \n\n## Math\n\nIn addition to regular text using the Markdown specification, you can also write mathematics, enclosed between dollar signs. The syntax for writing math is very similar to the syntax used in the $\\LaTeX$ markup language. For example, `$f(x) \\approx y$` renders to $f(x) \\approx y$. To place complex mathematical expressions on their own lines, use double dollar signs. For example, the expression \n\n`$$\\mathcal{L}(a, b) = \\sum_{i = 1}^n (ax_i + b - y_i)^2$$` \n\nrenders to: \n\n$$\\mathcal{L}(a, b) = \\sum_{i = 1}^n (ax_i + b - y_i)^2\\;.$$\n\nBehind the scenes, math is powered by the MathJax engine. For more on how to write math, check this handy [tutorial and quick reference](https://math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference). \n\n\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"output-file":"index.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.1.189","title-block-banner":"../../img/landscape.png","title-block-banner-color":"white","theme":"cosmo","title":"Hello Blog","author":"Phil Chodrow","date":"2023-01-10","image":"image.jpg","description":"An example blog post illustrating the key techniques you'll need to demonstrate your learning in CSCI 0451."},"extensions":{"book":{"multiFile":true}}}}}